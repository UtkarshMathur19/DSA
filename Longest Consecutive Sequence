Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

Code ->

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        nums.erase(unique(nums.begin(), nums.end()),nums.end());
        if(nums.size() == 0) return 0;
        int count = 0, curr = 1;
        if(nums.size() == 1)
            return 1;
        for(int i=1;i<nums.size();i++){
            if(abs(nums[i]-nums[i-1]) == 1)
                curr++;
            else{
                count = max(count, curr);
                curr = 1;
            }
                
        }
        count = max(count, curr);
        return count;
        
        
        
//         set<int> s;
//         for(int x : nums)
//             s.insert(x);
//         int ans = 0;
        
//         for(int i=0;i<nums.size();i++){
//             int curr_element = nums[i], prev_element = nums[i]-1, count = 0;
//             if(s.find(prev_element) == s.end()){
//                 while(s.find(curr_element)!=s.end()){
//                     curr_element++;
//                     count++;
//                 }
//             }
//             ans = max(ans, count);
//         }
//         return ans;
    }
};
