Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

Code ->

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> ans;
        
        sort(intervals.begin(),intervals.end());
        
        int l = intervals[0][0];
        int r = intervals[0][1];
        
        for(int i=1;i<intervals.size();i++){
            if(intervals[i][0]>r){
                ans.push_back({l,r});
                l = intervals[i][0];
                r = intervals[i][1];
            }
            
            else{
                l = min(l, intervals[i][0]);
                r = max(r, intervals[i][1]);
            }
            
        }
        ans.push_back({l,r});
        return ans;
    }
};
