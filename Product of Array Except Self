Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

Code ->

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> l(n), r(n);
        l[0] = 1;
        r[n-1] = 1;
        
        for(int i=1;i<n;i++)
            l[i] = l[i-1]*nums[i-1];
        for(int i=n-2;i>=0;i--)
            r[i] = r[i+1]*nums[i+1];
        for(int i=0;i<n;i++)
            nums[i] = l[i]*r[i];
        
        return nums;
        
    }
};
